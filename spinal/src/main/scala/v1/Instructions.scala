package v1

import spinal.core.LiteralBuilder

object Instructions {
  // RV32I
  def ADD       = M"0000000----------000-----0110011"
  def ADDI      = M"-----------------000-----0010011"
  def AND       = M"0000000----------111-----0110011"
  def ANDI      = M"-----------------111-----0010011"
  def AUIPC     = M"-------------------------0010111"
  def BEQ       = M"-----------------000-----1100011"
  def BGE       = M"-----------------101-----1100011"
  def BGEU      = M"-----------------111-----1100011"
  def BLT       = M"-----------------100-----1100011"
  def BLTU      = M"-----------------110-----1100011"
  def BNE       = M"-----------------001-----1100011"
  def EBREAK    = M"00000000000100000000000001110011"
  def ECALL     = M"00000000000000000000000001110011"
  def FENCE     = M"-----------------000-----0001111"
  def FENCE_TSO = M"100000110011-----000-----0001111"
  def JAL       = M"-------------------------1101111"
  def JALR      = M"-----------------000-----1100111"
  def LB        = M"-----------------000-----0000011"
  def LBU       = M"-----------------100-----0000011"
  def LH        = M"-----------------001-----0000011"
  def LHU       = M"-----------------101-----0000011"
  def LUI       = M"-------------------------0110111"
  def LW        = M"-----------------010-----0000011"
  def OR        = M"0000000----------110-----0110011"
  def ORI       = M"-----------------110-----0010011"
  def PAUSE     = M"00000001000000000000000000001111"
  def SB        = M"-----------------000-----0100011"
  def SBREAK    = M"00000000000100000000000001110011"
  def SCALL     = M"00000000000000000000000001110011"
  def SH        = M"-----------------001-----0100011"
  def SLL       = M"0000000----------001-----0110011"
  def SLT       = M"0000000----------010-----0110011"
  def SLTI      = M"-----------------010-----0010011"
  def SLTIU     = M"-----------------011-----0010011"
  def SLTU      = M"0000000----------011-----0110011"
  def SRA       = M"0100000----------101-----0110011"
  def SRL       = M"0000000----------101-----0110011"
  def SUB       = M"0100000----------000-----0110011"
  def SW        = M"-----------------010-----0100011"
  def XOR       = M"0000000----------100-----0110011"
  def XORI      = M"-----------------100-----0010011"
  def RV32I     = List(ADD, ADDI, AND, ANDI, AUIPC, BEQ, BGE, BGEU, BLT, BLTU, BNE, EBREAK, ECALL,
    FENCE, FENCE_TSO, JAL, JALR, LB, LBU, LH, LHU, LUI, LW, OR, ORI, PAUSE, SB, SBREAK, SCALL,
    SH, SLL, SLT, SLTI, SLTIU, SLTU, SRA, SRL, SUB, SW, XOR, XORI)

  // RV64I
  def ADDIW     = M"b-----------------000-----0011011"
  def ADDW      = M"b0000000----------000-----0111011"
  def LD        = M"b-----------------011-----0000011"
  def LWU       = M"b-----------------110-----0000011"
  def SD        = M"b-----------------011-----0100011"
  def SLLI      = M"b000000-----------001-----0010011"
  def SLLIW     = M"b0000000----------001-----0011011"
  def SLLW      = M"b0000000----------001-----0111011"
  def SRAI      = M"b010000-----------101-----0010011"
  def SRAIW     = M"b0100000----------101-----0011011"
  def SRAW      = M"b0100000----------101-----0111011"
  def SRLI      = M"b000000-----------101-----0010011"
  def SRLIW     = M"b0000000----------101-----0011011"
  def SRLW      = M"b0000000----------101-----0111011"
  def SUBW      = M"b0100000----------000-----0111011"
  
  // RV32M
  def DIV       = M"b0000001----------100-----0110011"
  def DIVU      = M"b0000001----------101-----0110011"
  def MUL       = M"b0000001----------000-----0110011"
  def MULH      = M"b0000001----------001-----0110011"
  def MULHSU    = M"b0000001----------010-----0110011"
  def MULHU     = M"b0000001----------011-----0110011"
  def REM       = M"b0000001----------110-----0110011"
  def REMU      = M"b0000001----------111-----0110011"

  // RV64M
  def DIVUW     = M"b0000001----------101-----0111011"
  def DIVW      = M"b0000001----------100-----0111011"
  def MULW      = M"b0000001----------000-----0111011"
  def REMUW     = M"b0000001----------111-----0111011"
  def REMW      = M"b0000001----------110-----0111011"
}
